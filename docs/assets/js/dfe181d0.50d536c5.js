"use strict";(self.webpackChunkcreator_companion_docs=self.webpackChunkcreator_companion_docs||[]).push([[834],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4472:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return d}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],l={id:"templates",title:"Templates",hide_title:!0},s=void 0,p={unversionedId:"vpm/templates",id:"vpm/templates",title:"Templates",description:"Templates are used to create new Unity projects preloaded with VRChat packages and settings.",source:"@site/docs/vpm/templates.md",sourceDirName:"vpm",slug:"/vpm/templates",permalink:" /vpm/templates",tags:[],version:"current",frontMatter:{id:"templates",title:"Templates",hide_title:!0},sidebar:"mainSidebar",previous:{title:"Package Manager",permalink:" /vpm/"},next:{title:"Packages",permalink:" /vpm/packages"}},c={},d=[{value:"Official Templates",id:"official-templates",level:2},{value:"Avatar",id:"avatar",level:3},{value:"World",id:"world",level:3},{value:"UdonSharp",id:"udonsharp",level:3},{value:"Base",id:"base",level:3},{value:"User Templates",id:"user-templates",level:2}],u={toc:d};function m(e){var t=e.components,l=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"templates"},"Templates"),(0,o.kt)("p",null,"Templates are used to create new Unity projects preloaded with VRChat packages and settings."),(0,o.kt)("h2",{id:"official-templates"},"Official Templates"),(0,o.kt)("p",null,"The Creator Companion includes four Templates:"),(0,o.kt)("h3",{id:"avatar"},"Avatar"),(0,o.kt)("p",null,"This template includes the Base and Avatar SDKs, ready for you to build and upload Avatars using ",(0,o.kt)("a",{parentName:"p",href:"https://docs.vrchat.com/docs/avatars-30"},"Avatars 3.0"),"."),(0,o.kt)("h3",{id:"world"},"World"),(0,o.kt)("p",null,"This template includes the Base and World SDKs, ready for you to build and upload Worlds using Udon programs and prefabs. It also includes ",(0,o.kt)("a",{parentName:"p",href:"https://clientsim.docs.vrchat.com/"},"ClientSim")," to easily test your World as you develop it."),(0,o.kt)("h3",{id:"udonsharp"},"UdonSharp"),(0,o.kt)("p",null,"This template includes everything in the World Template above, plus ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/vrchat-community/UdonSharp"},"UdonSharp")," for writing your programs using a C#-like syntax."),(0,o.kt)("h3",{id:"base"},"Base"),(0,o.kt)("p",null,"This template includes just the Base SDK. It's not commonly used except for testing."),(0,o.kt)("h2",{id:"user-templates"},"User Templates"),(0,o.kt)("p",null,"You can also add your own templates to easily start projects with your favorite packages, tools and prefabs. The easiest way to do this is to build from one of the included templates. Here's an example of how to do that for a World template where we include an imaginary tool called ",(0,o.kt)("inlineCode",{parentName:"p"},"HypeGenerator"),". "),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Copy the folder ",(0,o.kt)("inlineCode",{parentName:"li"},"C:\\Users\\{username}\\Documents\\VRChatCreatorCompanion\\VRCTemplates\\World")," to ",(0,o.kt)("inlineCode",{parentName:"li"},"C:\\Users\\{username}\\Documents\\VRChatCreatorCompanion\\Templates")," (use your actual drive letter if it's different than C)."),(0,o.kt)("li",{parentName:"ol"},"Rename the folder from ",(0,o.kt)("inlineCode",{parentName:"li"},"World")," to something descriptive like ",(0,o.kt)("inlineCode",{parentName:"li"},"HypeWorld"),"."),(0,o.kt)("li",{parentName:"ol"},"Modify HypeWorld\\package.json:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name" : "user.vrchat.template.hypeWorld",\n    "displayName" : "Hype World Project",\n    "description" : "Udon world with my auto-Hype-Generator tool",\n    "defaultScene" : "Assets/Hype.unity",\n    "version" : "1.0.0",\n    "category" : "ProjectTemplate",\n    "dependencies" : {}\n}\n')),(0,o.kt)("p",null,'The only required fields are "name" and "displayName" for now. Note that "defaultScene" is part of the spec from Unity but does not appear to work.'),(0,o.kt)("p",null,"4a. If my Hype Generator tool was available as a VPM-compatible package on git, I could add it to the gitDependencies list in HypeWorld\\Packages\\manifest.json:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "gitDependencies" : {\n        "com.vrchat.base" : "https://github.com/vrchat/com.vrchat.base.git",\n        "com.vrchat.worlds" : "https://github.com/vrchat/com.vrchat.worlds.git",\n        "com.mydomain.hype" : "https://github.com/username/reponame.git"\n    }\n}\n')),(0,o.kt)("p",null,"4b. If this tool is not yet migrated to VPM and instead should live in the Assets folder, I can instead just copy it into ",(0,o.kt)("inlineCode",{parentName:"p"},"HypeWorld\\Assets"),". Everything in the Assets, Packages and ProjectSettings folders will be copied into my new project. Make sure that you ",(0,o.kt)("em",{parentName:"p"},"don't")," include the file ProjectSettings/ProjectVersion.txt. This is not included in the World template but it will be in your ProjectSettings folder if you're copying files from an existing project."),(0,o.kt)("p",null,"With that folder in place, your template should now show up on the right side of the Templates screen when choosing to create a New Project:\n",(0,o.kt)("img",{alt:"User Templates",src:n(8818).Z,width:"1020",height:"584"})))}m.isMDXComponent=!0},8818:function(e,t,n){t.Z=n.p+"assets/images/user-templates-8be1ed71a8649c0c344d158cea70e670.png"}}]);